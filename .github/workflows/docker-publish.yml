name: Publish Docker Image

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      REGISTRY_DOCKERHUB: docker.io
      REGISTRY_GHCR: ghcr.io
      IMAGE_LINKPIPE: mattstratton/linkpipe
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag version
        id: get_tag
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Extract metadata for unified service
        id: meta-linkpipe
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_LINKPIPE }}
            ${{ env.REGISTRY_GHCR }}/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push unified image
        id: push-linkpipe
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta-linkpipe.outputs.tags }}
          labels: ${{ steps.meta-linkpipe.outputs.labels }}
          build-args: |
            APP_VERSION=${{ env.TAG }}

      - name: Generate artifact attestation for unified service
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY_GHCR }}/${{ github.repository }}
          subject-digest: ${{ steps.push-linkpipe.outputs.digest }}
          push-to-registry: true 